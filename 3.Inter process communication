#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
int main() {
    int pipefd[2];
    char buffer[20];
    if (pipe(pipefd) == -1) {
        perror("pipe");
        exit(EXIT_FAILURE);
    }
    if (fork() == 0) { // Child process
        close(pipefd[1]); // Close unused write end
        read(pipefd[0], buffer, sizeof(buffer));
        printf("Child received: %s\n", buffer);
        close(pipefd[0]);
    } else { // Parent process
        close(pipefd[0]); // Close unused read end
        const char *msg = "Hello, IPC!";
        write(pipefd[1], msg, sizeof(msg));
        close(pipefd[1]);
    }
    return 0;
}
